{"version":3,"file":"static/js/986.e6a6609b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList .jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact_form\":\"ContactForm_contact_form__MxVfX\",\"contact_label\":\"ContactForm_contact_label__hQuYE\",\"contact_input\":\"ContactForm_contact_input__pDruJ\",\"container\":\"ContactForm_container__qpJ1N\",\"title\":\"ContactForm_title__jZguf\",\"title_contacts\":\"ContactForm_title_contacts__cifKy\"};","\nimport { useState } from 'react';\nimport css from './ContactForm.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operation';\n\n\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  \n  const handleChange = ({ target: { name: inputName, value } }) => {\n    if (inputName === 'name') {\n      setName(value);\n    } else if (inputName === 'number') {\n      setPhone(value);\n    }\n  };\n\n  const handleSubmit = async  evt => {\n    evt.preventDefault();\n    const userName = contacts.items.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (userName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newData = { name, phone };\n    console.log('newData: ', newData);\n    dispatch(addContact(newData));\n    reset();\n  };\n  \n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (<section className={css.container}>\n       <h1 className={css.title}> Phonebook</h1>\n      <form className={css.contact_form} onSubmit={handleSubmit}>\n        <label className={css.contact_label}>Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n                \n            value={name}\n            onChange={handleChange}\n            placeholder=\"Enter contact\"\n            pattern=\"[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            className={css.contact_input}\n          />\n        </label>\n             \n        <label className={css.contact_label}>\n          Number phone:\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={phone}\n            onChange={handleChange}\n            placeholder=\"Enter number phone\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            className={css.contact_input}\n          /></label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n            </section>\n    )\n  }\n\n\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"number\":\"ContactList_number__2af8f\",\"name\":\"ContactList_name__UCkFW\",\"total\":\"ContactList_total__PX5ig\",\"container\":\"ContactList_container__hYHc3\",\"title\":\"ContactList_title__gpugJ\",\"title_contacts\":\"ContactList_title_contacts__0Fmpc\"};","import css from './ContactList.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from 'redux/operation';\nimport { useEffect, useState } from 'react';\nimport { selectContacts,  selectFilterContacts } from 'redux/selectors';\n\nconst ContactList = () => {\n  const [totalContacts, setTotalContacts] = useState('');\n  const contacts = useSelector(selectContacts);\n  // const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const visibleContact = useSelector(selectFilterContacts);\n\n  const total = contacts.items.length;\n \n  const handleDelete = (id) => dispatch(deleteContacts(id));\n useEffect(() => {\n    setTotalContacts(total);\n  }, [total]);\n  \n  \n  return (\n    visibleContact.length > 0 &&\n    <>\n      <h2>List Contcts</h2>\n        <p className={css.total}>Total contacts: {totalContacts}</p>\n         <ul className={css.list}>\n                {visibleContact.map(contact => {\n                  const tel=`tel:${contact.phone}`\n                  return (\n                    <li className={css.item} key={contact.id}>\n                 <span className={css.name}>{contact.name}:</span> \n                  <a href={tel} className={css.number}>{contact.phone}</a> \n                    <button type=\"button\" onClick={()=>handleDelete(contact.id)}>Delete</button>\n              </li>\n            )\n          })}\n      </ul> \n             </>\n    )\n}\n\nexport default ContactList; ","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"filter_block\":\"Filter_filter_block__1qvb0\",\"container\":\"Filter_container__L5eml\",\"title\":\"Filter_title__pSkfx\",\"title_contacts\":\"Filter_title_contacts__SYLYY\"};","import css from './Filter.module.css' \nimport { useDispatch, useSelector } from 'react-redux';\nimport {  setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n      const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n    \n  const handleFilter = evt => {\n    dispatch(setFilter(evt.currentTarget.value));\n  };\n    \n    return (\n        <div >\n\n        <div className={css.container}>\n            <label\n                className={css.label}\n                htmlFor=\"filter\">\n                Find contacts by name\n            </label>\n            <input\n                className={css.input}\n                id='filter'\n                name='filter'\n                type='text'\n                value={filter}\n                placeholder='name to search for'\n                onChange={handleFilter}\n            />\n        </div>\n                </div>\n    )\n}\n\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList ';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchContacts } from 'redux/operation';\nimport { selectIsLoading } from 'redux/selectors';\n\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\nconst isLoading = useSelector(selectIsLoading)\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <> \n      <ContactForm />\n      <Filter />\n      { isLoading&&<Loader/>}\n       <ContactList />\n    </>\n    \n  )\n}\n\nexport default Contacts"],"names":["dispatch","useDispatch","contacts","useSelector","selectContacts","useState","name","setName","phone","setPhone","handleChange","target","inputName","value","handleSubmit","evt","preventDefault","items","find","contact","toLowerCase","alert","newData","console","log","addContact","reset","className","css","onSubmit","type","onChange","placeholder","pattern","title","required","totalContacts","setTotalContacts","visibleContact","selectFilterContacts","total","length","useEffect","map","tel","href","onClick","id","deleteContacts","Filter","filter","selectFilter","htmlFor","setFilter","currentTarget","isLoading","selectIsLoading","fetchContacts","Loader"],"sourceRoot":""}